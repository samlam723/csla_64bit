/*
###############################################################
#  Generated by:      Cadence Encounter 14.26-s039_1
#  OS:                Linux x86_64(Host ID EEX052)
#  Generated on:      Fri Apr 23 22:58:03 2021
#  Design:            csla_64bit
#  Command:           saveNetlist results/csla_64bit.routed.v
###############################################################
*/
module bit1adder_0 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X2 U2 (.ZN(n1),
	.B2(p),
	.B1(cin),
	.A(g));
endmodule

module bit1adder_121 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X4 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X2 U4 (.ZN(count),
	.A(n3));
endmodule

module bit1adder_122 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   AOI21_X2 U1 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U4 (.ZN(count),
	.A(n3));
   XOR2_X1 U2 (.Z(outbit),
	.B(cin),
	.A(p));
endmodule

module bit1adder_123 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   INV_X1 U4 (.ZN(count),
	.A(n3));
   AOI21_X1 U2 (.ZN(n3),
	.B2(p),
	.B1(cin),
	.A(g));
   XOR2_X1 U1 (.Z(outbit),
	.B(cin),
	.A(p));
endmodule

module bitNRCAdder_N4_0 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [3:0] add1;
   input [3:0] add2;
   input cin;
   output [3:0] result;
   output cout;

   // Internal wires
   wire n1;
   wire [3:0] p;
   wire [3:0] g;
   wire [3:1] c_mid;

   bit1adder_0 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_123 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_122 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_121 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(cout));
   XOR2_X2 U5 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X2 U6 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U7 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   INV_X2 U3 (.ZN(n1),
	.A(add2[0]));
   AND2_X1 U4 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
   AND2_X1 U9 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U10 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U11 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   XNOR2_X2 U1 (.ZN(p[0]),
	.B(add1[0]),
	.A(n1));
endmodule

module bitNmux_N4 (
	in0, 
	in1, 
	sel, 
	ou1);
   input [4:0] in0;
   input [4:0] in1;
   input sel;
   output [4:0] ou1;

   // Internal wires
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;

   AOI22_X2 FE_RC_3_0 (.ZN(n11),
	.B2(in1[0]),
	.B1(sel),
	.A2(in0[0]),
	.A1(n6));
   INV_X2 U1 (.ZN(ou1[0]),
	.A(n11));
   INV_X2 U4 (.ZN(n6),
	.A(sel));
   INV_X1 U6 (.ZN(ou1[2]),
	.A(n9));
   INV_X1 U7 (.ZN(ou1[3]),
	.A(n8));
   INV_X1 U8 (.ZN(ou1[4]),
	.A(n7));
   INV_X1 U9 (.ZN(ou1[1]),
	.A(n10));
   AOI22_X1 U10 (.ZN(n10),
	.B2(sel),
	.B1(in1[1]),
	.A2(n6),
	.A1(in0[1]));
   AOI22_X1 U11 (.ZN(n9),
	.B2(sel),
	.B1(in1[2]),
	.A2(n6),
	.A1(in0[2]));
   AOI22_X1 U12 (.ZN(n8),
	.B2(sel),
	.B1(in1[3]),
	.A2(n6),
	.A1(in0[3]));
   AOI22_X1 U13 (.ZN(n7),
	.B2(in1[4]),
	.B1(sel),
	.A2(n6),
	.A1(in0[4]));
endmodule

module bit1adder_108 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n2;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n2));
   AOI21_X1 U2 (.ZN(n2),
	.B2(p),
	.B1(cin),
	.A(g));
endmodule

module bit1adder_109 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_110 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_111 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_112 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N5_0 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [4:0] add1;
   input [4:0] add2;
   input cin;
   output [4:0] result;
   output cout;

   // Internal wires
   wire [4:0] p;
   wire [4:0] g;
   wire [4:1] c_mid;

   bit1adder_112 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_111 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_110 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_109 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_108 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(cout));
   XOR2_X1 U6 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U7 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U8 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U9 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U10 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U2 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U3 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U4 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U5 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
endmodule

module bitNmux_N5 (
	in0, 
	in1, 
	sel, 
	ou1);
   input [5:0] in0;
   input [5:0] in1;
   input sel;
   output [5:0] ou1;

   // Internal wires
   wire FE_OCPN13_selected_c_1_;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n3;

   CLKBUF_X1 FE_OCPC13_selected_c_1_ (.Z(FE_OCPN13_selected_c_1_),
	.A(sel));
   AOI22_X4 FE_RC_4_0 (.ZN(n3),
	.B2(in1[0]),
	.B1(sel),
	.A2(in0[0]),
	.A1(n7));
   INV_X1 U4 (.ZN(ou1[2]),
	.A(n11));
   INV_X1 U5 (.ZN(ou1[3]),
	.A(n10));
   INV_X1 U6 (.ZN(ou1[4]),
	.A(n9));
   INV_X1 U7 (.ZN(ou1[5]),
	.A(n8));
   INV_X1 U8 (.ZN(ou1[1]),
	.A(n12));
   INV_X2 U10 (.ZN(n7),
	.A(sel));
   AOI22_X1 U11 (.ZN(n8),
	.B2(in1[5]),
	.B1(FE_OCPN13_selected_c_1_),
	.A2(n7),
	.A1(in0[5]));
   AOI22_X1 U12 (.ZN(n9),
	.B2(FE_OCPN13_selected_c_1_),
	.B1(in1[4]),
	.A2(n7),
	.A1(in0[4]));
   AOI22_X1 U13 (.ZN(n10),
	.B2(FE_OCPN13_selected_c_1_),
	.B1(in1[3]),
	.A2(n7),
	.A1(in0[3]));
   AOI22_X1 U14 (.ZN(n11),
	.B2(FE_OCPN13_selected_c_1_),
	.B1(in1[2]),
	.A2(n7),
	.A1(in0[2]));
   AOI22_X1 U15 (.ZN(n12),
	.B2(FE_OCPN13_selected_c_1_),
	.B1(in1[1]),
	.A2(n7),
	.A1(in0[1]));
   INV_X4 U2 (.ZN(ou1[0]),
	.A(n3));
endmodule

module bit1adder_97 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_98 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_99 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_100 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_101 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_102 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N6_0 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [5:0] add1;
   input [5:0] add2;
   input cin;
   output [5:0] result;
   output cout;

   // Internal wires
   wire [5:0] p;
   wire [5:0] g;
   wire [5:1] c_mid;

   bit1adder_102 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_101 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_100 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_99 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_98 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(c_mid[5]));
   bit1adder_97 block_5__bit1adder_module (.g(g[5]),
	.p(p[5]),
	.cin(c_mid[5]),
	.outbit(result[5]),
	.count(cout));
   XOR2_X1 U7 (.Z(p[5]),
	.B(add1[5]),
	.A(add2[5]));
   XOR2_X1 U8 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U9 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U10 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U11 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U12 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[5]),
	.A2(add1[5]),
	.A1(add2[5]));
   AND2_X1 U2 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U3 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U4 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U5 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U6 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
endmodule

module bitNmux_N6 (
	in0, 
	in1, 
	sel, 
	ou1);
   input [6:0] in0;
   input [6:0] in1;
   input sel;
   output [6:0] ou1;

   // Internal wires
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n1;

   AOI22_X2 FE_RC_2_0 (.ZN(n15),
	.B2(in1[0]),
	.B1(sel),
	.A2(in0[0]),
	.A1(n1));
   INV_X2 U2 (.ZN(ou1[0]),
	.A(n15));
   INV_X2 U3 (.ZN(n1),
	.A(sel));
   INV_X1 U6 (.ZN(ou1[2]),
	.A(n13));
   INV_X1 U7 (.ZN(ou1[3]),
	.A(n12));
   INV_X1 U8 (.ZN(ou1[4]),
	.A(n11));
   INV_X1 U9 (.ZN(ou1[5]),
	.A(n10));
   INV_X1 U10 (.ZN(ou1[6]),
	.A(n9));
   INV_X1 U11 (.ZN(ou1[1]),
	.A(n14));
   AOI22_X1 U12 (.ZN(n9),
	.B2(in1[6]),
	.B1(sel),
	.A2(n1),
	.A1(in0[6]));
   AOI22_X1 U13 (.ZN(n10),
	.B2(sel),
	.B1(in1[5]),
	.A2(n1),
	.A1(in0[5]));
   AOI22_X1 U14 (.ZN(n11),
	.B2(sel),
	.B1(in1[4]),
	.A2(n1),
	.A1(in0[4]));
   AOI22_X1 U15 (.ZN(n12),
	.B2(sel),
	.B1(in1[3]),
	.A2(n1),
	.A1(in0[3]));
   AOI22_X1 U16 (.ZN(n13),
	.B2(sel),
	.B1(in1[2]),
	.A2(n1),
	.A1(in0[2]));
   AOI22_X1 U17 (.ZN(n14),
	.B2(sel),
	.B1(in1[1]),
	.A2(n1),
	.A1(in0[1]));
endmodule

module bit1adder_84 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_85 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_86 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_87 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_88 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_89 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_90 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N7_0 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [6:0] add1;
   input [6:0] add2;
   input cin;
   output [6:0] result;
   output cout;

   // Internal wires
   wire [6:0] p;
   wire [6:0] g;
   wire [6:1] c_mid;

   bit1adder_90 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_89 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_88 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_87 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_86 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(c_mid[5]));
   bit1adder_85 block_5__bit1adder_module (.g(g[5]),
	.p(p[5]),
	.cin(c_mid[5]),
	.outbit(result[5]),
	.count(c_mid[6]));
   bit1adder_84 block_6__bit1adder_module (.g(g[6]),
	.p(p[6]),
	.cin(c_mid[6]),
	.outbit(result[6]),
	.count(cout));
   XOR2_X1 U8 (.Z(p[6]),
	.B(add1[6]),
	.A(add2[6]));
   XOR2_X1 U9 (.Z(p[5]),
	.B(add1[5]),
	.A(add2[5]));
   XOR2_X1 U10 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U11 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U12 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U13 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U14 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[6]),
	.A2(add1[6]),
	.A1(add2[6]));
   AND2_X1 U2 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U3 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U4 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U5 (.ZN(g[5]),
	.A2(add1[5]),
	.A1(add2[5]));
   AND2_X1 U6 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U7 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
endmodule

module bitNmux_N7 (
	in0, 
	in1, 
	sel, 
	ou1);
   input [7:0] in0;
   input [7:0] in1;
   input sel;
   output [7:0] ou1;

   // Internal wires
   wire FE_OCPN8_selected_c_3_;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n2;

   BUF_X1 FE_OCPC8_selected_c_3_ (.Z(FE_OCPN8_selected_c_3_),
	.A(sel));
   AOI22_X1 U2 (.ZN(n17),
	.B2(in1[0]),
	.B1(sel),
	.A2(in0[0]),
	.A1(n2));
   INV_X1 U3 (.ZN(ou1[2]),
	.A(n15));
   INV_X1 U4 (.ZN(ou1[3]),
	.A(n14));
   INV_X1 U5 (.ZN(ou1[4]),
	.A(n13));
   INV_X1 U6 (.ZN(ou1[5]),
	.A(n12));
   INV_X1 U7 (.ZN(ou1[6]),
	.A(n11));
   INV_X1 U8 (.ZN(ou1[7]),
	.A(n10));
   INV_X1 U9 (.ZN(ou1[1]),
	.A(n16));
   INV_X2 U10 (.ZN(n2),
	.A(sel));
   INV_X2 U12 (.ZN(ou1[0]),
	.A(n17));
   AOI22_X1 U13 (.ZN(n10),
	.B2(in1[7]),
	.B1(sel),
	.A2(n2),
	.A1(in0[7]));
   AOI22_X1 U14 (.ZN(n11),
	.B2(FE_OCPN8_selected_c_3_),
	.B1(in1[6]),
	.A2(n2),
	.A1(in0[6]));
   AOI22_X1 U15 (.ZN(n12),
	.B2(FE_OCPN8_selected_c_3_),
	.B1(in1[5]),
	.A2(n2),
	.A1(in0[5]));
   AOI22_X1 U16 (.ZN(n13),
	.B2(FE_OCPN8_selected_c_3_),
	.B1(in1[4]),
	.A2(n2),
	.A1(in0[4]));
   AOI22_X1 U17 (.ZN(n14),
	.B2(FE_OCPN8_selected_c_3_),
	.B1(in1[3]),
	.A2(n2),
	.A1(in0[3]));
   AOI22_X1 U18 (.ZN(n15),
	.B2(FE_OCPN8_selected_c_3_),
	.B1(in1[2]),
	.A2(n2),
	.A1(in0[2]));
   AOI22_X1 U19 (.ZN(n16),
	.B2(FE_OCPN8_selected_c_3_),
	.B1(in1[1]),
	.A2(n2),
	.A1(in0[1]));
endmodule

module bit1adder_69 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_70 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_71 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_72 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_73 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_74 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_75 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_76 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N8_0 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [7:0] add1;
   input [7:0] add2;
   input cin;
   output [7:0] result;
   output cout;

   // Internal wires
   wire [7:0] p;
   wire [7:0] g;
   wire [7:1] c_mid;

   bit1adder_76 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_75 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_74 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_73 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_72 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(c_mid[5]));
   bit1adder_71 block_5__bit1adder_module (.g(g[5]),
	.p(p[5]),
	.cin(c_mid[5]),
	.outbit(result[5]),
	.count(c_mid[6]));
   bit1adder_70 block_6__bit1adder_module (.g(g[6]),
	.p(p[6]),
	.cin(c_mid[6]),
	.outbit(result[6]),
	.count(c_mid[7]));
   bit1adder_69 block_7__bit1adder_module (.g(g[7]),
	.p(p[7]),
	.cin(c_mid[7]),
	.outbit(result[7]),
	.count(cout));
   XOR2_X1 U9 (.Z(p[7]),
	.B(add1[7]),
	.A(add2[7]));
   XOR2_X1 U10 (.Z(p[6]),
	.B(add1[6]),
	.A(add2[6]));
   XOR2_X1 U11 (.Z(p[5]),
	.B(add1[5]),
	.A(add2[5]));
   XOR2_X1 U12 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U13 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U14 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U15 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U16 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[7]),
	.A2(add1[7]),
	.A1(add2[7]));
   AND2_X1 U2 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U3 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U4 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U5 (.ZN(g[5]),
	.A2(add1[5]),
	.A1(add2[5]));
   AND2_X1 U6 (.ZN(g[6]),
	.A2(add1[6]),
	.A1(add2[6]));
   AND2_X1 U7 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U8 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
endmodule

module bitNmux_N8 (
	in0, 
	in1, 
	sel, 
	ou1);
   input [8:0] in0;
   input [8:0] in1;
   input sel;
   output [8:0] ou1;

   // Internal wires
   wire FE_OCPN15_selected_c_4_;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;

   BUF_X1 FE_OCPC15_selected_c_4_ (.Z(FE_OCPN15_selected_c_4_),
	.A(sel));
   AOI22_X1 FE_RC_0_0 (.ZN(n19),
	.B2(in1[0]),
	.B1(sel),
	.A2(in0[0]),
	.A1(n10));
   INV_X1 U1 (.ZN(ou1[0]),
	.A(n19));
   INV_X1 U2 (.ZN(ou1[8]),
	.A(n11));
   INV_X1 U3 (.ZN(ou1[2]),
	.A(n17));
   INV_X1 U4 (.ZN(ou1[3]),
	.A(n16));
   INV_X1 U5 (.ZN(ou1[4]),
	.A(n15));
   INV_X1 U6 (.ZN(ou1[5]),
	.A(n14));
   INV_X1 U7 (.ZN(ou1[6]),
	.A(n13));
   INV_X1 U8 (.ZN(ou1[7]),
	.A(n12));
   INV_X1 U9 (.ZN(ou1[1]),
	.A(n18));
   INV_X4 U11 (.ZN(n10),
	.A(sel));
   AOI22_X1 U14 (.ZN(n11),
	.B2(in1[8]),
	.B1(FE_OCPN15_selected_c_4_),
	.A2(n10),
	.A1(in0[8]));
   AOI22_X1 U15 (.ZN(n12),
	.B2(FE_OCPN15_selected_c_4_),
	.B1(in1[7]),
	.A2(n10),
	.A1(in0[7]));
   AOI22_X1 U16 (.ZN(n13),
	.B2(FE_OCPN15_selected_c_4_),
	.B1(in1[6]),
	.A2(n10),
	.A1(in0[6]));
   AOI22_X1 U17 (.ZN(n14),
	.B2(FE_OCPN15_selected_c_4_),
	.B1(in1[5]),
	.A2(n10),
	.A1(in0[5]));
   AOI22_X1 U18 (.ZN(n15),
	.B2(FE_OCPN15_selected_c_4_),
	.B1(in1[4]),
	.A2(n10),
	.A1(in0[4]));
   AOI22_X1 U19 (.ZN(n16),
	.B2(FE_OCPN15_selected_c_4_),
	.B1(in1[3]),
	.A2(n10),
	.A1(in0[3]));
   AOI22_X1 U20 (.ZN(n17),
	.B2(FE_OCPN15_selected_c_4_),
	.B1(in1[2]),
	.A2(n10),
	.A1(in0[2]));
   AOI22_X1 U21 (.ZN(n18),
	.B2(FE_OCPN15_selected_c_4_),
	.B1(in1[1]),
	.A2(n10),
	.A1(in0[1]));
endmodule

module bit1adder_52 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_53 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_54 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_55 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_56 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_57 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_58 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_59 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_60 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N9_0 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [8:0] add1;
   input [8:0] add2;
   input cin;
   output [8:0] result;
   output cout;

   // Internal wires
   wire [8:0] p;
   wire [8:0] g;
   wire [8:1] c_mid;

   bit1adder_60 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_59 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_58 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_57 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_56 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(c_mid[5]));
   bit1adder_55 block_5__bit1adder_module (.g(g[5]),
	.p(p[5]),
	.cin(c_mid[5]),
	.outbit(result[5]),
	.count(c_mid[6]));
   bit1adder_54 block_6__bit1adder_module (.g(g[6]),
	.p(p[6]),
	.cin(c_mid[6]),
	.outbit(result[6]),
	.count(c_mid[7]));
   bit1adder_53 block_7__bit1adder_module (.g(g[7]),
	.p(p[7]),
	.cin(c_mid[7]),
	.outbit(result[7]),
	.count(c_mid[8]));
   bit1adder_52 block_8__bit1adder_module (.g(g[8]),
	.p(p[8]),
	.cin(c_mid[8]),
	.outbit(result[8]),
	.count(cout));
   XOR2_X1 U10 (.Z(p[8]),
	.B(add1[8]),
	.A(add2[8]));
   XOR2_X1 U11 (.Z(p[7]),
	.B(add1[7]),
	.A(add2[7]));
   XOR2_X1 U12 (.Z(p[6]),
	.B(add1[6]),
	.A(add2[6]));
   XOR2_X1 U13 (.Z(p[5]),
	.B(add1[5]),
	.A(add2[5]));
   XOR2_X1 U14 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U15 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U16 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U17 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U18 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[8]),
	.A2(add1[8]),
	.A1(add2[8]));
   AND2_X1 U2 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U3 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U4 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U5 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U6 (.ZN(g[5]),
	.A2(add1[5]),
	.A1(add2[5]));
   AND2_X1 U7 (.ZN(g[6]),
	.A2(add1[6]),
	.A1(add2[6]));
   AND2_X1 U8 (.ZN(g[7]),
	.A2(add1[7]),
	.A1(add2[7]));
   AND2_X1 U9 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
endmodule

module bitNmux_N9 (
	in0, 
	in1, 
	sel, 
	ou1);
   input [9:0] in0;
   input [9:0] in1;
   input sel;
   output [9:0] ou1;

   // Internal wires
   wire FE_OCPN11_FE_OFN5_selected_c_5_;
   wire FE_DBTN0_selected_c_5_;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;

   BUF_X1 FE_OCPC11_FE_OFN5_selected_c_5_ (.Z(FE_OCPN11_FE_OFN5_selected_c_5_),
	.A(sel));
   AOI22_X4 FE_RC_5_0 (.ZN(n21),
	.B2(in1[0]),
	.B1(sel),
	.A2(in0[0]),
	.A1(FE_DBTN0_selected_c_5_));
   INV_X4 FE_DBTC0_selected_c_5_ (.ZN(FE_DBTN0_selected_c_5_),
	.A(sel));
   INV_X4 U4 (.ZN(ou1[0]),
	.A(n21));
   INV_X1 U6 (.ZN(ou1[2]),
	.A(n19));
   INV_X1 U7 (.ZN(ou1[3]),
	.A(n18));
   INV_X1 U8 (.ZN(ou1[4]),
	.A(n17));
   INV_X1 U9 (.ZN(ou1[5]),
	.A(n16));
   INV_X1 U10 (.ZN(ou1[6]),
	.A(n15));
   INV_X1 U11 (.ZN(ou1[7]),
	.A(n14));
   INV_X1 U12 (.ZN(ou1[8]),
	.A(n13));
   INV_X1 U13 (.ZN(ou1[9]),
	.A(n12));
   INV_X1 U14 (.ZN(ou1[1]),
	.A(n20));
   AOI22_X1 U15 (.ZN(n12),
	.B2(in1[9]),
	.B1(sel),
	.A2(FE_DBTN0_selected_c_5_),
	.A1(in0[9]));
   AOI22_X1 U16 (.ZN(n13),
	.B2(sel),
	.B1(in1[8]),
	.A2(FE_DBTN0_selected_c_5_),
	.A1(in0[8]));
   AOI22_X1 U17 (.ZN(n14),
	.B2(sel),
	.B1(in1[7]),
	.A2(FE_DBTN0_selected_c_5_),
	.A1(in0[7]));
   AOI22_X1 U18 (.ZN(n15),
	.B2(sel),
	.B1(in1[6]),
	.A2(FE_DBTN0_selected_c_5_),
	.A1(in0[6]));
   AOI22_X1 U19 (.ZN(n16),
	.B2(sel),
	.B1(in1[5]),
	.A2(FE_DBTN0_selected_c_5_),
	.A1(in0[5]));
   AOI22_X1 U20 (.ZN(n17),
	.B2(FE_OCPN11_FE_OFN5_selected_c_5_),
	.B1(in1[4]),
	.A2(FE_DBTN0_selected_c_5_),
	.A1(in0[4]));
   AOI22_X1 U21 (.ZN(n18),
	.B2(FE_OCPN11_FE_OFN5_selected_c_5_),
	.B1(in1[3]),
	.A2(FE_DBTN0_selected_c_5_),
	.A1(in0[3]));
   AOI22_X1 U22 (.ZN(n19),
	.B2(FE_OCPN11_FE_OFN5_selected_c_5_),
	.B1(in1[2]),
	.A2(FE_DBTN0_selected_c_5_),
	.A1(in0[2]));
   AOI22_X1 U23 (.ZN(n20),
	.B2(FE_OCPN11_FE_OFN5_selected_c_5_),
	.B1(in1[1]),
	.A2(FE_DBTN0_selected_c_5_),
	.A1(in0[1]));
endmodule

module bit1adder_33 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_34 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_35 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_36 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_37 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_38 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_39 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_40 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_41 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_42 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N10_0 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [9:0] add1;
   input [9:0] add2;
   input cin;
   output [9:0] result;
   output cout;

   // Internal wires
   wire [9:0] p;
   wire [9:0] g;
   wire [9:1] c_mid;

   bit1adder_42 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_41 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_40 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_39 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_38 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(c_mid[5]));
   bit1adder_37 block_5__bit1adder_module (.g(g[5]),
	.p(p[5]),
	.cin(c_mid[5]),
	.outbit(result[5]),
	.count(c_mid[6]));
   bit1adder_36 block_6__bit1adder_module (.g(g[6]),
	.p(p[6]),
	.cin(c_mid[6]),
	.outbit(result[6]),
	.count(c_mid[7]));
   bit1adder_35 block_7__bit1adder_module (.g(g[7]),
	.p(p[7]),
	.cin(c_mid[7]),
	.outbit(result[7]),
	.count(c_mid[8]));
   bit1adder_34 block_8__bit1adder_module (.g(g[8]),
	.p(p[8]),
	.cin(c_mid[8]),
	.outbit(result[8]),
	.count(c_mid[9]));
   bit1adder_33 block_9__bit1adder_module (.g(g[9]),
	.p(p[9]),
	.cin(c_mid[9]),
	.outbit(result[9]),
	.count(cout));
   XOR2_X1 U11 (.Z(p[9]),
	.B(add1[9]),
	.A(add2[9]));
   XOR2_X1 U12 (.Z(p[8]),
	.B(add1[8]),
	.A(add2[8]));
   XOR2_X1 U13 (.Z(p[7]),
	.B(add1[7]),
	.A(add2[7]));
   XOR2_X1 U14 (.Z(p[6]),
	.B(add1[6]),
	.A(add2[6]));
   XOR2_X1 U15 (.Z(p[5]),
	.B(add1[5]),
	.A(add2[5]));
   XOR2_X1 U16 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U17 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U18 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U19 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U20 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[9]),
	.A2(add1[9]),
	.A1(add2[9]));
   AND2_X1 U2 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U3 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U4 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U5 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U6 (.ZN(g[5]),
	.A2(add1[5]),
	.A1(add2[5]));
   AND2_X1 U7 (.ZN(g[6]),
	.A2(add1[6]),
	.A1(add2[6]));
   AND2_X1 U8 (.ZN(g[7]),
	.A2(add1[7]),
	.A1(add2[7]));
   AND2_X1 U9 (.ZN(g[8]),
	.A2(add1[8]),
	.A1(add2[8]));
   AND2_X1 U10 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
endmodule

module bitNmux_N10 (
	in0, 
	in1, 
	sel, 
	ou1);
   input [10:0] in0;
   input [10:0] in1;
   input sel;
   output [10:0] ou1;

   // Internal wires
   wire FE_UNCONNECTED_0;
   wire FE_OCPN9_selected_c_6_;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;

   CLKBUF_X1 FE_OCPC9_selected_c_6_ (.Z(FE_OCPN9_selected_c_6_),
	.A(sel));
   AOI22_X2 FE_RC_1_0 (.ZN(n23),
	.B2(in1[0]),
	.B1(sel),
	.A2(in0[0]),
	.A1(n12));
   INV_X4 U2 (.ZN(n12),
	.A(sel));
   INV_X8 U3 (.ZN(ou1[0]),
	.A(n23));
   INV_X1 U6 (.ZN(ou1[2]),
	.A(n20));
   INV_X1 U7 (.ZN(ou1[3]),
	.A(n19));
   INV_X1 U8 (.ZN(ou1[4]),
	.A(n18));
   INV_X1 U9 (.ZN(ou1[5]),
	.A(n17));
   INV_X1 U10 (.ZN(ou1[6]),
	.A(n16));
   INV_X1 U11 (.ZN(ou1[7]),
	.A(n15));
   INV_X1 U12 (.ZN(ou1[8]),
	.A(n14));
   INV_X1 U13 (.ZN(ou1[9]),
	.A(n13));
   INV_X1 U14 (.ZN(ou1[10]),
	.A(n22));
   INV_X1 U15 (.ZN(ou1[1]),
	.A(n21));
   AOI22_X1 U16 (.ZN(n13),
	.B2(in1[9]),
	.B1(FE_OCPN9_selected_c_6_),
	.A2(n12),
	.A1(in0[9]));
   AOI22_X1 U17 (.ZN(n14),
	.B2(FE_OCPN9_selected_c_6_),
	.B1(in1[8]),
	.A2(n12),
	.A1(in0[8]));
   AOI22_X1 U18 (.ZN(n15),
	.B2(FE_OCPN9_selected_c_6_),
	.B1(in1[7]),
	.A2(n12),
	.A1(in0[7]));
   AOI22_X1 U19 (.ZN(n16),
	.B2(FE_OCPN9_selected_c_6_),
	.B1(in1[6]),
	.A2(n12),
	.A1(in0[6]));
   AOI22_X1 U20 (.ZN(n17),
	.B2(FE_OCPN9_selected_c_6_),
	.B1(in1[5]),
	.A2(n12),
	.A1(in0[5]));
   AOI22_X1 U21 (.ZN(n18),
	.B2(FE_OCPN9_selected_c_6_),
	.B1(in1[4]),
	.A2(n12),
	.A1(in0[4]));
   AOI22_X1 U22 (.ZN(n19),
	.B2(sel),
	.B1(in1[3]),
	.A2(n12),
	.A1(in0[3]));
   AOI22_X1 U23 (.ZN(n20),
	.B2(FE_OCPN9_selected_c_6_),
	.B1(in1[2]),
	.A2(n12),
	.A1(in0[2]));
   AOI22_X1 U24 (.ZN(n21),
	.B2(FE_OCPN9_selected_c_6_),
	.B1(in1[1]),
	.A2(n12),
	.A1(in0[1]));
   AOI22_X1 U25 (.ZN(n22),
	.B2(sel),
	.B1(in1[10]),
	.A2(n12),
	.A1(in0[10]));
endmodule

module bit1adder_12 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(count),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_13 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_14 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_15 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_16 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_17 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_18 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_19 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_20 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_21 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_22 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N11_0 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [10:0] add1;
   input [10:0] add2;
   input cin;
   output [10:0] result;
   output cout;

   // Internal wires
   wire [10:0] p;
   wire [10:0] g;
   wire [10:1] c_mid;

   bit1adder_22 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_21 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_20 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_19 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_18 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(c_mid[5]));
   bit1adder_17 block_5__bit1adder_module (.g(g[5]),
	.p(p[5]),
	.cin(c_mid[5]),
	.outbit(result[5]),
	.count(c_mid[6]));
   bit1adder_16 block_6__bit1adder_module (.g(g[6]),
	.p(p[6]),
	.cin(c_mid[6]),
	.outbit(result[6]),
	.count(c_mid[7]));
   bit1adder_15 block_7__bit1adder_module (.g(g[7]),
	.p(p[7]),
	.cin(c_mid[7]),
	.outbit(result[7]),
	.count(c_mid[8]));
   bit1adder_14 block_8__bit1adder_module (.g(g[8]),
	.p(p[8]),
	.cin(c_mid[8]),
	.outbit(result[8]),
	.count(c_mid[9]));
   bit1adder_13 block_9__bit1adder_module (.g(g[9]),
	.p(p[9]),
	.cin(c_mid[9]),
	.outbit(result[9]),
	.count(c_mid[10]));
   bit1adder_12 block_10__bit1adder_module (.g(g[10]),
	.p(p[10]),
	.cin(c_mid[10]),
	.outbit(result[10]),
	.count(cout));
   XOR2_X1 U12 (.Z(p[9]),
	.B(add1[9]),
	.A(add2[9]));
   XOR2_X1 U13 (.Z(p[8]),
	.B(add1[8]),
	.A(add2[8]));
   XOR2_X1 U14 (.Z(p[7]),
	.B(add1[7]),
	.A(add2[7]));
   XOR2_X1 U15 (.Z(p[6]),
	.B(add1[6]),
	.A(add2[6]));
   XOR2_X1 U16 (.Z(p[5]),
	.B(add1[5]),
	.A(add2[5]));
   XOR2_X1 U17 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U18 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U19 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U20 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U21 (.Z(p[10]),
	.B(add1[10]),
	.A(add2[10]));
   XOR2_X1 U22 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[10]),
	.A2(add1[10]),
	.A1(add2[10]));
   AND2_X1 U2 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U3 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U4 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U5 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U6 (.ZN(g[5]),
	.A2(add1[5]),
	.A1(add2[5]));
   AND2_X1 U7 (.ZN(g[6]),
	.A2(add1[6]),
	.A1(add2[6]));
   AND2_X1 U8 (.ZN(g[7]),
	.A2(add1[7]),
	.A1(add2[7]));
   AND2_X1 U9 (.ZN(g[8]),
	.A2(add1[8]),
	.A1(add2[8]));
   AND2_X1 U10 (.ZN(g[9]),
	.A2(add1[9]),
	.A1(add2[9]));
   AND2_X1 U11 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
endmodule

module bitNmux_N11 (
	in0, 
	in1, 
	sel, 
	ou1);
   input [11:0] in0;
   input [11:0] in1;
   input sel;
   output [11:0] ou1;

   // Internal wires
   wire FE_OFN4_FE_DBTN1_selected_c_7_;
   wire FE_DBTN1_selected_c_7_;
   wire n14;
   wire n15;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n10;
   wire n11;

   BUF_X4 FE_OFC4_FE_DBTN1_selected_c_7_ (.Z(FE_OFN4_FE_DBTN1_selected_c_7_),
	.A(FE_DBTN1_selected_c_7_));
   INV_X1 FE_DBTC1_selected_c_7_ (.ZN(FE_DBTN1_selected_c_7_),
	.A(sel));
   INV_X1 U3 (.ZN(n10),
	.A(in0[7]));
   INV_X1 U4 (.ZN(n11),
	.A(in1[7]));
   OAI22_X1 U8 (.ZN(ou1[0]),
	.B2(FE_OFN4_FE_DBTN1_selected_c_7_),
	.B1(in1[0]),
	.A2(sel),
	.A1(in0[0]));
   INV_X1 U9 (.ZN(ou1[1]),
	.A(n22));
   INV_X1 U10 (.ZN(ou1[3]),
	.A(n20));
   INV_X1 U11 (.ZN(ou1[4]),
	.A(n19));
   INV_X1 U12 (.ZN(ou1[5]),
	.A(n18));
   INV_X1 U13 (.ZN(ou1[6]),
	.A(n17));
   OAI22_X1 U17 (.ZN(ou1[7]),
	.B2(FE_OFN4_FE_DBTN1_selected_c_7_),
	.B1(n11),
	.A2(sel),
	.A1(n10));
   INV_X1 U18 (.ZN(ou1[8]),
	.A(n15));
   INV_X1 U19 (.ZN(ou1[2]),
	.A(n21));
   INV_X1 U20 (.ZN(ou1[10]),
	.A(n24));
   INV_X1 U21 (.ZN(ou1[11]),
	.A(n23));
   INV_X1 U22 (.ZN(ou1[9]),
	.A(n14));
   AOI22_X1 U23 (.ZN(n14),
	.B2(in1[9]),
	.B1(sel),
	.A2(in0[9]),
	.A1(FE_OFN4_FE_DBTN1_selected_c_7_));
   AOI22_X1 U24 (.ZN(n15),
	.B2(sel),
	.B1(in1[8]),
	.A2(FE_OFN4_FE_DBTN1_selected_c_7_),
	.A1(in0[8]));
   AOI22_X1 U25 (.ZN(n17),
	.B2(sel),
	.B1(in1[6]),
	.A2(FE_OFN4_FE_DBTN1_selected_c_7_),
	.A1(in0[6]));
   AOI22_X1 U26 (.ZN(n18),
	.B2(sel),
	.B1(in1[5]),
	.A2(FE_OFN4_FE_DBTN1_selected_c_7_),
	.A1(in0[5]));
   AOI22_X1 U27 (.ZN(n19),
	.B2(sel),
	.B1(in1[4]),
	.A2(FE_OFN4_FE_DBTN1_selected_c_7_),
	.A1(in0[4]));
   AOI22_X1 U28 (.ZN(n20),
	.B2(sel),
	.B1(in1[3]),
	.A2(FE_OFN4_FE_DBTN1_selected_c_7_),
	.A1(in0[3]));
   AOI22_X1 U29 (.ZN(n21),
	.B2(sel),
	.B1(in1[2]),
	.A2(FE_OFN4_FE_DBTN1_selected_c_7_),
	.A1(in0[2]));
   AOI22_X1 U30 (.ZN(n22),
	.B2(sel),
	.B1(in1[1]),
	.A2(FE_OFN4_FE_DBTN1_selected_c_7_),
	.A1(in0[1]));
   AOI22_X1 U31 (.ZN(n23),
	.B2(sel),
	.B1(in1[11]),
	.A2(FE_OFN4_FE_DBTN1_selected_c_7_),
	.A1(in0[11]));
   AOI22_X1 U32 (.ZN(n24),
	.B2(sel),
	.B1(in1[10]),
	.A2(FE_OFN4_FE_DBTN1_selected_c_7_),
	.A1(in0[10]));
endmodule

module bit1adder_113 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U2 (.ZN(count),
	.A(n1));
   AOI21_X2 U1 (.ZN(n1),
	.B2(p),
	.B1(cin),
	.A(g));
endmodule

module bit1adder_114 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n2;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n2));
   AOI21_X1 U2 (.ZN(n2),
	.B2(p),
	.B1(cin),
	.A(g));
endmodule

module bit1adder_115 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n2;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n2));
   AOI21_X1 U2 (.ZN(n2),
	.B2(p),
	.B1(cin),
	.A(g));
endmodule

module bit1adder_116 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bitNRCAdder_N4_1 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [3:0] add1;
   input [3:0] add2;
   input cin;
   output [3:0] result;
   output cout;

   // Internal wires
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire [3:0] p;
   wire [3:0] g;
   wire [3:1] c_mid;

   bit1adder_116 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_115 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_114 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_113 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(cout));
   XOR2_X1 U5 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U6 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U7 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   AND2_X1 U1 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
   AND2_X1 U2 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   NAND2_X1 U3 (.ZN(n3),
	.A2(add2[0]),
	.A1(n2));
   NAND2_X1 U4 (.ZN(n4),
	.A2(add1[0]),
	.A1(n1));
   NAND2_X1 U8 (.ZN(p[0]),
	.A2(n4),
	.A1(n3));
   INV_X1 U9 (.ZN(n1),
	.A(add2[0]));
   INV_X1 U10 (.ZN(n2),
	.A(add1[0]));
   AND2_X1 U11 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U12 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
endmodule

module bit1adder_117 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X2 U1 (.ZN(n1),
	.B2(p),
	.B1(cin),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_118 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X2 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_119 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X2 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_120 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U2 (.ZN(count),
	.A(n1));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N4_2 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [3:0] add1;
   input [3:0] add2;
   input cin;
   output [3:0] result;
   output cout;

   // Internal wires
   wire [3:0] p;
   wire [3:0] g;
   wire [3:1] c_mid;

   bit1adder_120 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_119 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_118 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_117 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(cout));
   XOR2_X1 U5 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U6 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U7 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U8 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U2 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U3 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U4 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U1 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
endmodule

module bit1adder_103 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X2 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_104 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n2;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n2));
   AOI21_X2 U2 (.ZN(n2),
	.B2(p),
	.B1(cin),
	.A(g));
endmodule

module bit1adder_105 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n2;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n2));
   AOI21_X2 U2 (.ZN(n2),
	.B2(p),
	.B1(cin),
	.A(g));
endmodule

module bit1adder_106 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n2;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n2));
   AOI21_X1 U2 (.ZN(n2),
	.B2(p),
	.B1(cin),
	.A(g));
endmodule

module bit1adder_107 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n3;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(n3),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U4 (.ZN(count),
	.A(n3));
endmodule

module bitNRCAdder_N5_1 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [4:0] add1;
   input [4:0] add2;
   input cin;
   output [4:0] result;
   output cout;

   // Internal wires
   wire [4:0] p;
   wire [4:0] g;
   wire [4:1] c_mid;

   bit1adder_107 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_106 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_105 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_104 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_103 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(cout));
   XOR2_X1 U6 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U7 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U8 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U9 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U10 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U2 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U3 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U4 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U5 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
endmodule

module bit1adder_91 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_92 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X2 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_93 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X2 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_94 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X2 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_95 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_96 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N6_1 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [5:0] add1;
   input [5:0] add2;
   input cin;
   output [5:0] result;
   output cout;

   // Internal wires
   wire [5:0] p;
   wire [5:0] g;
   wire [5:1] c_mid;

   bit1adder_96 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_95 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_94 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_93 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_92 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(c_mid[5]));
   bit1adder_91 block_5__bit1adder_module (.g(g[5]),
	.p(p[5]),
	.cin(c_mid[5]),
	.outbit(result[5]),
	.count(cout));
   XOR2_X1 U7 (.Z(p[5]),
	.B(add1[5]),
	.A(add2[5]));
   XOR2_X1 U8 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U9 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U10 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U11 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U12 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[5]),
	.A2(add1[5]),
	.A1(add2[5]));
   AND2_X1 U2 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U3 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U4 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U5 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U6 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
endmodule

module bit1adder_77 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_78 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_79 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_80 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_81 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_82 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_83 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N7_1 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [6:0] add1;
   input [6:0] add2;
   input cin;
   output [6:0] result;
   output cout;

   // Internal wires
   wire [6:0] p;
   wire [6:0] g;
   wire [6:1] c_mid;

   bit1adder_83 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_82 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_81 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_80 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_79 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(c_mid[5]));
   bit1adder_78 block_5__bit1adder_module (.g(g[5]),
	.p(p[5]),
	.cin(c_mid[5]),
	.outbit(result[5]),
	.count(c_mid[6]));
   bit1adder_77 block_6__bit1adder_module (.g(g[6]),
	.p(p[6]),
	.cin(c_mid[6]),
	.outbit(result[6]),
	.count(cout));
   XOR2_X1 U8 (.Z(p[6]),
	.B(add1[6]),
	.A(add2[6]));
   XOR2_X1 U9 (.Z(p[5]),
	.B(add1[5]),
	.A(add2[5]));
   XOR2_X1 U10 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U11 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U12 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U13 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U14 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[6]),
	.A2(add1[6]),
	.A1(add2[6]));
   AND2_X1 U2 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U3 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U4 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U5 (.ZN(g[5]),
	.A2(add1[5]),
	.A1(add2[5]));
   AND2_X1 U6 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U7 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
endmodule

module bit1adder_61 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_62 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_63 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_64 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_65 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U1 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
   INV_X1 U2 (.ZN(count),
	.A(n1));
endmodule

module bit1adder_66 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_67 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_68 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N8_1 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [7:0] add1;
   input [7:0] add2;
   input cin;
   output [7:0] result;
   output cout;

   // Internal wires
   wire [7:0] p;
   wire [7:0] g;
   wire [7:1] c_mid;

   bit1adder_68 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_67 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_66 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_65 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_64 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(c_mid[5]));
   bit1adder_63 block_5__bit1adder_module (.g(g[5]),
	.p(p[5]),
	.cin(c_mid[5]),
	.outbit(result[5]),
	.count(c_mid[6]));
   bit1adder_62 block_6__bit1adder_module (.g(g[6]),
	.p(p[6]),
	.cin(c_mid[6]),
	.outbit(result[6]),
	.count(c_mid[7]));
   bit1adder_61 block_7__bit1adder_module (.g(g[7]),
	.p(p[7]),
	.cin(c_mid[7]),
	.outbit(result[7]),
	.count(cout));
   XOR2_X1 U9 (.Z(p[7]),
	.B(add1[7]),
	.A(add2[7]));
   XOR2_X1 U10 (.Z(p[6]),
	.B(add1[6]),
	.A(add2[6]));
   XOR2_X1 U11 (.Z(p[5]),
	.B(add1[5]),
	.A(add2[5]));
   XOR2_X1 U12 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U13 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U14 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U15 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U16 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[7]),
	.A2(add1[7]),
	.A1(add2[7]));
   AND2_X1 U2 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U3 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U4 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U5 (.ZN(g[5]),
	.A2(add1[5]),
	.A1(add2[5]));
   AND2_X1 U6 (.ZN(g[6]),
	.A2(add1[6]),
	.A1(add2[6]));
   AND2_X1 U7 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U8 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
endmodule

module bit1adder_43 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_44 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_45 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_46 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_47 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_48 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_49 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_50 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_51 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N9_1 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [8:0] add1;
   input [8:0] add2;
   input cin;
   output [8:0] result;
   output cout;

   // Internal wires
   wire [8:0] p;
   wire [8:0] g;
   wire [8:1] c_mid;

   bit1adder_51 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_50 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_49 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_48 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_47 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(c_mid[5]));
   bit1adder_46 block_5__bit1adder_module (.g(g[5]),
	.p(p[5]),
	.cin(c_mid[5]),
	.outbit(result[5]),
	.count(c_mid[6]));
   bit1adder_45 block_6__bit1adder_module (.g(g[6]),
	.p(p[6]),
	.cin(c_mid[6]),
	.outbit(result[6]),
	.count(c_mid[7]));
   bit1adder_44 block_7__bit1adder_module (.g(g[7]),
	.p(p[7]),
	.cin(c_mid[7]),
	.outbit(result[7]),
	.count(c_mid[8]));
   bit1adder_43 block_8__bit1adder_module (.g(g[8]),
	.p(p[8]),
	.cin(c_mid[8]),
	.outbit(result[8]),
	.count(cout));
   XOR2_X1 U10 (.Z(p[8]),
	.B(add1[8]),
	.A(add2[8]));
   XOR2_X1 U11 (.Z(p[7]),
	.B(add1[7]),
	.A(add2[7]));
   XOR2_X1 U12 (.Z(p[6]),
	.B(add1[6]),
	.A(add2[6]));
   XOR2_X1 U13 (.Z(p[5]),
	.B(add1[5]),
	.A(add2[5]));
   XOR2_X1 U14 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U15 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U16 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U17 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U18 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[8]),
	.A2(add1[8]),
	.A1(add2[8]));
   AND2_X1 U2 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U3 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U4 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U5 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U6 (.ZN(g[5]),
	.A2(add1[5]),
	.A1(add2[5]));
   AND2_X1 U7 (.ZN(g[6]),
	.A2(add1[6]),
	.A1(add2[6]));
   AND2_X1 U8 (.ZN(g[7]),
	.A2(add1[7]),
	.A1(add2[7]));
   AND2_X1 U9 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
endmodule

module bit1adder_23 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_24 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_25 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_26 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_27 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_28 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_29 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_30 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_31 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_32 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N10_1 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [9:0] add1;
   input [9:0] add2;
   input cin;
   output [9:0] result;
   output cout;

   // Internal wires
   wire [9:0] p;
   wire [9:0] g;
   wire [9:1] c_mid;

   bit1adder_32 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_31 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_30 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_29 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_28 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(c_mid[5]));
   bit1adder_27 block_5__bit1adder_module (.g(g[5]),
	.p(p[5]),
	.cin(c_mid[5]),
	.outbit(result[5]),
	.count(c_mid[6]));
   bit1adder_26 block_6__bit1adder_module (.g(g[6]),
	.p(p[6]),
	.cin(c_mid[6]),
	.outbit(result[6]),
	.count(c_mid[7]));
   bit1adder_25 block_7__bit1adder_module (.g(g[7]),
	.p(p[7]),
	.cin(c_mid[7]),
	.outbit(result[7]),
	.count(c_mid[8]));
   bit1adder_24 block_8__bit1adder_module (.g(g[8]),
	.p(p[8]),
	.cin(c_mid[8]),
	.outbit(result[8]),
	.count(c_mid[9]));
   bit1adder_23 block_9__bit1adder_module (.g(g[9]),
	.p(p[9]),
	.cin(c_mid[9]),
	.outbit(result[9]),
	.count(cout));
   XOR2_X1 U11 (.Z(p[9]),
	.B(add1[9]),
	.A(add2[9]));
   XOR2_X1 U12 (.Z(p[8]),
	.B(add1[8]),
	.A(add2[8]));
   XOR2_X1 U13 (.Z(p[7]),
	.B(add1[7]),
	.A(add2[7]));
   XOR2_X1 U14 (.Z(p[6]),
	.B(add1[6]),
	.A(add2[6]));
   XOR2_X1 U15 (.Z(p[5]),
	.B(add1[5]),
	.A(add2[5]));
   XOR2_X1 U16 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U17 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U18 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U19 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U20 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[9]),
	.A2(add1[9]),
	.A1(add2[9]));
   AND2_X1 U2 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
   AND2_X1 U3 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U4 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U5 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U6 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U7 (.ZN(g[5]),
	.A2(add1[5]),
	.A1(add2[5]));
   AND2_X1 U8 (.ZN(g[6]),
	.A2(add1[6]),
	.A1(add2[6]));
   AND2_X1 U9 (.ZN(g[7]),
	.A2(add1[7]),
	.A1(add2[7]));
   AND2_X1 U10 (.ZN(g[8]),
	.A2(add1[8]),
	.A1(add2[8]));
endmodule

module bit1adder_1 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   AOI21_X1 U2 (.ZN(count),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_2 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_3 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_4 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_5 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_6 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_7 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_8 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_9 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_10 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bit1adder_11 (
	g, 
	p, 
	cin, 
	outbit, 
	count);
   input g;
   input p;
   input cin;
   output outbit;
   output count;

   // Internal wires
   wire n1;

   XOR2_X1 U3 (.Z(outbit),
	.B(cin),
	.A(p));
   INV_X1 U1 (.ZN(count),
	.A(n1));
   AOI21_X1 U2 (.ZN(n1),
	.B2(cin),
	.B1(p),
	.A(g));
endmodule

module bitNRCAdder_N11_1 (
	add1, 
	add2, 
	cin, 
	result, 
	cout);
   input [10:0] add1;
   input [10:0] add2;
   input cin;
   output [10:0] result;
   output cout;

   // Internal wires
   wire [10:0] p;
   wire [10:0] g;
   wire [10:1] c_mid;

   bit1adder_11 block_0__bit1adder_module (.g(g[0]),
	.p(p[0]),
	.cin(cin),
	.outbit(result[0]),
	.count(c_mid[1]));
   bit1adder_10 block_1__bit1adder_module (.g(g[1]),
	.p(p[1]),
	.cin(c_mid[1]),
	.outbit(result[1]),
	.count(c_mid[2]));
   bit1adder_9 block_2__bit1adder_module (.g(g[2]),
	.p(p[2]),
	.cin(c_mid[2]),
	.outbit(result[2]),
	.count(c_mid[3]));
   bit1adder_8 block_3__bit1adder_module (.g(g[3]),
	.p(p[3]),
	.cin(c_mid[3]),
	.outbit(result[3]),
	.count(c_mid[4]));
   bit1adder_7 block_4__bit1adder_module (.g(g[4]),
	.p(p[4]),
	.cin(c_mid[4]),
	.outbit(result[4]),
	.count(c_mid[5]));
   bit1adder_6 block_5__bit1adder_module (.g(g[5]),
	.p(p[5]),
	.cin(c_mid[5]),
	.outbit(result[5]),
	.count(c_mid[6]));
   bit1adder_5 block_6__bit1adder_module (.g(g[6]),
	.p(p[6]),
	.cin(c_mid[6]),
	.outbit(result[6]),
	.count(c_mid[7]));
   bit1adder_4 block_7__bit1adder_module (.g(g[7]),
	.p(p[7]),
	.cin(c_mid[7]),
	.outbit(result[7]),
	.count(c_mid[8]));
   bit1adder_3 block_8__bit1adder_module (.g(g[8]),
	.p(p[8]),
	.cin(c_mid[8]),
	.outbit(result[8]),
	.count(c_mid[9]));
   bit1adder_2 block_9__bit1adder_module (.g(g[9]),
	.p(p[9]),
	.cin(c_mid[9]),
	.outbit(result[9]),
	.count(c_mid[10]));
   bit1adder_1 block_10__bit1adder_module (.g(g[10]),
	.p(p[10]),
	.cin(c_mid[10]),
	.outbit(result[10]),
	.count(cout));
   XOR2_X1 U12 (.Z(p[9]),
	.B(add1[9]),
	.A(add2[9]));
   XOR2_X1 U13 (.Z(p[8]),
	.B(add1[8]),
	.A(add2[8]));
   XOR2_X1 U14 (.Z(p[7]),
	.B(add1[7]),
	.A(add2[7]));
   XOR2_X1 U15 (.Z(p[6]),
	.B(add1[6]),
	.A(add2[6]));
   XOR2_X1 U16 (.Z(p[5]),
	.B(add1[5]),
	.A(add2[5]));
   XOR2_X1 U17 (.Z(p[4]),
	.B(add1[4]),
	.A(add2[4]));
   XOR2_X1 U18 (.Z(p[3]),
	.B(add1[3]),
	.A(add2[3]));
   XOR2_X1 U19 (.Z(p[2]),
	.B(add1[2]),
	.A(add2[2]));
   XOR2_X1 U20 (.Z(p[1]),
	.B(add1[1]),
	.A(add2[1]));
   XOR2_X1 U21 (.Z(p[10]),
	.B(add1[10]),
	.A(add2[10]));
   XOR2_X1 U22 (.Z(p[0]),
	.B(add1[0]),
	.A(add2[0]));
   AND2_X1 U1 (.ZN(g[10]),
	.A2(add1[10]),
	.A1(add2[10]));
   AND2_X1 U2 (.ZN(g[0]),
	.A2(add1[0]),
	.A1(add2[0]));
   AND2_X1 U3 (.ZN(g[1]),
	.A2(add1[1]),
	.A1(add2[1]));
   AND2_X1 U4 (.ZN(g[2]),
	.A2(add1[2]),
	.A1(add2[2]));
   AND2_X1 U5 (.ZN(g[3]),
	.A2(add1[3]),
	.A1(add2[3]));
   AND2_X1 U6 (.ZN(g[4]),
	.A2(add1[4]),
	.A1(add2[4]));
   AND2_X1 U7 (.ZN(g[5]),
	.A2(add1[5]),
	.A1(add2[5]));
   AND2_X1 U8 (.ZN(g[6]),
	.A2(add1[6]),
	.A1(add2[6]));
   AND2_X1 U9 (.ZN(g[7]),
	.A2(add1[7]),
	.A1(add2[7]));
   AND2_X1 U10 (.ZN(g[8]),
	.A2(add1[8]),
	.A1(add2[8]));
   AND2_X1 U11 (.ZN(g[9]),
	.A2(add1[9]),
	.A1(add2[9]));
endmodule

module csla_64bit (
	a, 
	b, 
	cin, 
	sum, 
	cout);
   input [63:0] a;
   input [63:0] b;
   input cin;
   output [63:0] sum;
   output cout;

   // Internal wires
   wire FE_OFN5_selected_c_5_;
   wire [7:0] selected_c;
   wire [119:0] mid_sum;
   wire [15:0] mid_c;

   BUF_X4 FE_OFC5_selected_c_5_ (.Z(FE_OFN5_selected_c_5_),
	.A(selected_c[5]));
   bitNRCAdder_N4_0 bitNRCAdder1_i1 (.add1({ a[3],
		a[2],
		a[1],
		a[0] }),
	.add2({ b[3],
		b[2],
		b[1],
		b[0] }),
	.cin(cin),
	.result({ sum[3],
		sum[2],
		sum[1],
		sum[0] }),
	.cout(selected_c[0]));
   bitNRCAdder_N4_2 bitNRCAdder1_i2 (.add1({ a[7],
		a[6],
		a[5],
		a[4] }),
	.add2({ b[7],
		b[6],
		b[5],
		b[4] }),
	.cin(1'b0),
	.result({ mid_sum[3],
		mid_sum[2],
		mid_sum[1],
		mid_sum[0] }),
	.cout(mid_c[0]));
   bitNRCAdder_N4_1 bitNRCAdder2_i2 (.add1({ a[7],
		a[6],
		a[5],
		a[4] }),
	.add2({ b[7],
		b[6],
		b[5],
		b[4] }),
	.cin(1'b1),
	.result({ mid_sum[7],
		mid_sum[6],
		mid_sum[5],
		mid_sum[4] }),
	.cout(mid_c[1]));
   bitNmux_N4 bitNmux_i2 (.in0({ mid_sum[3],
		mid_sum[2],
		mid_sum[1],
		mid_sum[0],
		mid_c[0] }),
	.in1({ mid_sum[7],
		mid_sum[6],
		mid_sum[5],
		mid_sum[4],
		mid_c[1] }),
	.sel(selected_c[0]),
	.ou1({ sum[7],
		sum[6],
		sum[5],
		sum[4],
		selected_c[1] }));
   bitNRCAdder_N5_0 bitNRCAdder1_i3 (.add1({ a[12],
		a[11],
		a[10],
		a[9],
		a[8] }),
	.add2({ b[12],
		b[11],
		b[10],
		b[9],
		b[8] }),
	.cin(1'b0),
	.result({ mid_sum[12],
		mid_sum[11],
		mid_sum[10],
		mid_sum[9],
		mid_sum[8] }),
	.cout(mid_c[2]));
   bitNRCAdder_N5_1 bitNRCAdder2_i3 (.add1({ a[12],
		a[11],
		a[10],
		a[9],
		a[8] }),
	.add2({ b[12],
		b[11],
		b[10],
		b[9],
		b[8] }),
	.cin(1'b1),
	.result({ mid_sum[17],
		mid_sum[16],
		mid_sum[15],
		mid_sum[14],
		mid_sum[13] }),
	.cout(mid_c[3]));
   bitNmux_N5 bitNmux_i3 (.in0({ mid_sum[12],
		mid_sum[11],
		mid_sum[10],
		mid_sum[9],
		mid_sum[8],
		mid_c[2] }),
	.in1({ mid_sum[17],
		mid_sum[16],
		mid_sum[15],
		mid_sum[14],
		mid_sum[13],
		mid_c[3] }),
	.sel(selected_c[1]),
	.ou1({ sum[12],
		sum[11],
		sum[10],
		sum[9],
		sum[8],
		selected_c[2] }));
   bitNRCAdder_N6_0 bitNRCAdder1_i4 (.add1({ a[18],
		a[17],
		a[16],
		a[15],
		a[14],
		a[13] }),
	.add2({ b[18],
		b[17],
		b[16],
		b[15],
		b[14],
		b[13] }),
	.cin(1'b0),
	.result({ mid_sum[23],
		mid_sum[22],
		mid_sum[21],
		mid_sum[20],
		mid_sum[19],
		mid_sum[18] }),
	.cout(mid_c[4]));
   bitNRCAdder_N6_1 bitNRCAdder2_i4 (.add1({ a[18],
		a[17],
		a[16],
		a[15],
		a[14],
		a[13] }),
	.add2({ b[18],
		b[17],
		b[16],
		b[15],
		b[14],
		b[13] }),
	.cin(1'b1),
	.result({ mid_sum[29],
		mid_sum[28],
		mid_sum[27],
		mid_sum[26],
		mid_sum[25],
		mid_sum[24] }),
	.cout(mid_c[5]));
   bitNmux_N6 bitNmux_i4 (.in0({ mid_sum[23],
		mid_sum[22],
		mid_sum[21],
		mid_sum[20],
		mid_sum[19],
		mid_sum[18],
		mid_c[4] }),
	.in1({ mid_sum[29],
		mid_sum[28],
		mid_sum[27],
		mid_sum[26],
		mid_sum[25],
		mid_sum[24],
		mid_c[5] }),
	.sel(selected_c[2]),
	.ou1({ sum[18],
		sum[17],
		sum[16],
		sum[15],
		sum[14],
		sum[13],
		selected_c[3] }));
   bitNRCAdder_N7_0 bitNRCAdder1_i5 (.add1({ a[25],
		a[24],
		a[23],
		a[22],
		a[21],
		a[20],
		a[19] }),
	.add2({ b[25],
		b[24],
		b[23],
		b[22],
		b[21],
		b[20],
		b[19] }),
	.cin(1'b0),
	.result({ mid_sum[36],
		mid_sum[35],
		mid_sum[34],
		mid_sum[33],
		mid_sum[32],
		mid_sum[31],
		mid_sum[30] }),
	.cout(mid_c[6]));
   bitNRCAdder_N7_1 bitNRCAdder2_i5 (.add1({ a[25],
		a[24],
		a[23],
		a[22],
		a[21],
		a[20],
		a[19] }),
	.add2({ b[25],
		b[24],
		b[23],
		b[22],
		b[21],
		b[20],
		b[19] }),
	.cin(1'b1),
	.result({ mid_sum[43],
		mid_sum[42],
		mid_sum[41],
		mid_sum[40],
		mid_sum[39],
		mid_sum[38],
		mid_sum[37] }),
	.cout(mid_c[7]));
   bitNmux_N7 bitNmux_i5 (.in0({ mid_sum[36],
		mid_sum[35],
		mid_sum[34],
		mid_sum[33],
		mid_sum[32],
		mid_sum[31],
		mid_sum[30],
		mid_c[6] }),
	.in1({ mid_sum[43],
		mid_sum[42],
		mid_sum[41],
		mid_sum[40],
		mid_sum[39],
		mid_sum[38],
		mid_sum[37],
		mid_c[7] }),
	.sel(selected_c[3]),
	.ou1({ sum[25],
		sum[24],
		sum[23],
		sum[22],
		sum[21],
		sum[20],
		sum[19],
		selected_c[4] }));
   bitNRCAdder_N8_0 bitNRCAdder1_i6 (.add1({ a[33],
		a[32],
		a[31],
		a[30],
		a[29],
		a[28],
		a[27],
		a[26] }),
	.add2({ b[33],
		b[32],
		b[31],
		b[30],
		b[29],
		b[28],
		b[27],
		b[26] }),
	.cin(1'b0),
	.result({ mid_sum[51],
		mid_sum[50],
		mid_sum[49],
		mid_sum[48],
		mid_sum[47],
		mid_sum[46],
		mid_sum[45],
		mid_sum[44] }),
	.cout(mid_c[8]));
   bitNRCAdder_N8_1 bitNRCAdder2_i6 (.add1({ a[33],
		a[32],
		a[31],
		a[30],
		a[29],
		a[28],
		a[27],
		a[26] }),
	.add2({ b[33],
		b[32],
		b[31],
		b[30],
		b[29],
		b[28],
		b[27],
		b[26] }),
	.cin(1'b1),
	.result({ mid_sum[59],
		mid_sum[58],
		mid_sum[57],
		mid_sum[56],
		mid_sum[55],
		mid_sum[54],
		mid_sum[53],
		mid_sum[52] }),
	.cout(mid_c[9]));
   bitNmux_N8 bitNmux_i6 (.in0({ mid_sum[51],
		mid_sum[50],
		mid_sum[49],
		mid_sum[48],
		mid_sum[47],
		mid_sum[46],
		mid_sum[45],
		mid_sum[44],
		mid_c[8] }),
	.in1({ mid_sum[59],
		mid_sum[58],
		mid_sum[57],
		mid_sum[56],
		mid_sum[55],
		mid_sum[54],
		mid_sum[53],
		mid_sum[52],
		mid_c[9] }),
	.sel(selected_c[4]),
	.ou1({ sum[33],
		sum[32],
		sum[31],
		sum[30],
		sum[29],
		sum[28],
		sum[27],
		sum[26],
		selected_c[5] }));
   bitNRCAdder_N9_0 bitNRCAdder1_i7 (.add1({ a[42],
		a[41],
		a[40],
		a[39],
		a[38],
		a[37],
		a[36],
		a[35],
		a[34] }),
	.add2({ b[42],
		b[41],
		b[40],
		b[39],
		b[38],
		b[37],
		b[36],
		b[35],
		b[34] }),
	.cin(1'b0),
	.result({ mid_sum[68],
		mid_sum[67],
		mid_sum[66],
		mid_sum[65],
		mid_sum[64],
		mid_sum[63],
		mid_sum[62],
		mid_sum[61],
		mid_sum[60] }),
	.cout(mid_c[10]));
   bitNRCAdder_N9_1 bitNRCAdder2_i7 (.add1({ a[42],
		a[41],
		a[40],
		a[39],
		a[38],
		a[37],
		a[36],
		a[35],
		a[34] }),
	.add2({ b[42],
		b[41],
		b[40],
		b[39],
		b[38],
		b[37],
		b[36],
		b[35],
		b[34] }),
	.cin(1'b1),
	.result({ mid_sum[77],
		mid_sum[76],
		mid_sum[75],
		mid_sum[74],
		mid_sum[73],
		mid_sum[72],
		mid_sum[71],
		mid_sum[70],
		mid_sum[69] }),
	.cout(mid_c[11]));
   bitNmux_N9 bitNmux_i7 (.in0({ mid_sum[68],
		mid_sum[67],
		mid_sum[66],
		mid_sum[65],
		mid_sum[64],
		mid_sum[63],
		mid_sum[62],
		mid_sum[61],
		mid_sum[60],
		mid_c[10] }),
	.in1({ mid_sum[77],
		mid_sum[76],
		mid_sum[75],
		mid_sum[74],
		mid_sum[73],
		mid_sum[72],
		mid_sum[71],
		mid_sum[70],
		mid_sum[69],
		mid_c[11] }),
	.sel(FE_OFN5_selected_c_5_),
	.ou1({ sum[42],
		sum[41],
		sum[40],
		sum[39],
		sum[38],
		sum[37],
		sum[36],
		sum[35],
		sum[34],
		selected_c[6] }));
   bitNRCAdder_N10_0 bitNRCAdder1_i8 (.add1({ a[52],
		a[51],
		a[50],
		a[49],
		a[48],
		a[47],
		a[46],
		a[45],
		a[44],
		a[43] }),
	.add2({ b[52],
		b[51],
		b[50],
		b[49],
		b[48],
		b[47],
		b[46],
		b[45],
		b[44],
		b[43] }),
	.cin(1'b0),
	.result({ mid_sum[87],
		mid_sum[86],
		mid_sum[85],
		mid_sum[84],
		mid_sum[83],
		mid_sum[82],
		mid_sum[81],
		mid_sum[80],
		mid_sum[79],
		mid_sum[78] }),
	.cout(mid_c[12]));
   bitNRCAdder_N10_1 bitNRCAdder2_i8 (.add1({ a[52],
		a[51],
		a[50],
		a[49],
		a[48],
		a[47],
		a[46],
		a[45],
		a[44],
		a[43] }),
	.add2({ b[52],
		b[51],
		b[50],
		b[49],
		b[48],
		b[47],
		b[46],
		b[45],
		b[44],
		b[43] }),
	.cin(1'b1),
	.result({ mid_sum[97],
		mid_sum[96],
		mid_sum[95],
		mid_sum[94],
		mid_sum[93],
		mid_sum[92],
		mid_sum[91],
		mid_sum[90],
		mid_sum[89],
		mid_sum[88] }),
	.cout(mid_c[13]));
   bitNmux_N10 bitNmux_i8 (.in0({ mid_sum[87],
		mid_sum[86],
		mid_sum[85],
		mid_sum[84],
		mid_sum[83],
		mid_sum[82],
		mid_sum[81],
		mid_sum[80],
		mid_sum[79],
		mid_sum[78],
		mid_c[12] }),
	.in1({ mid_sum[97],
		mid_sum[96],
		mid_sum[95],
		mid_sum[94],
		mid_sum[93],
		mid_sum[92],
		mid_sum[91],
		mid_sum[90],
		mid_sum[89],
		mid_sum[88],
		mid_c[13] }),
	.sel(selected_c[6]),
	.ou1({ sum[52],
		sum[51],
		sum[50],
		sum[49],
		sum[48],
		sum[47],
		sum[46],
		sum[45],
		sum[44],
		sum[43],
		selected_c[7] }));
   bitNRCAdder_N11_0 bitNRCAdder1_i9 (.add1({ a[63],
		a[62],
		a[61],
		a[60],
		a[59],
		a[58],
		a[57],
		a[56],
		a[55],
		a[54],
		a[53] }),
	.add2({ b[63],
		b[62],
		b[61],
		b[60],
		b[59],
		b[58],
		b[57],
		b[56],
		b[55],
		b[54],
		b[53] }),
	.cin(1'b0),
	.result({ mid_sum[108],
		mid_sum[107],
		mid_sum[106],
		mid_sum[105],
		mid_sum[104],
		mid_sum[103],
		mid_sum[102],
		mid_sum[101],
		mid_sum[100],
		mid_sum[99],
		mid_sum[98] }),
	.cout(mid_c[14]));
   bitNRCAdder_N11_1 bitNRCAdder2_i9 (.add1({ a[63],
		a[62],
		a[61],
		a[60],
		a[59],
		a[58],
		a[57],
		a[56],
		a[55],
		a[54],
		a[53] }),
	.add2({ b[63],
		b[62],
		b[61],
		b[60],
		b[59],
		b[58],
		b[57],
		b[56],
		b[55],
		b[54],
		b[53] }),
	.cin(1'b1),
	.result({ mid_sum[119],
		mid_sum[118],
		mid_sum[117],
		mid_sum[116],
		mid_sum[115],
		mid_sum[114],
		mid_sum[113],
		mid_sum[112],
		mid_sum[111],
		mid_sum[110],
		mid_sum[109] }),
	.cout(mid_c[15]));
   bitNmux_N11 bitNmux_i9 (.in0({ mid_sum[108],
		mid_sum[107],
		mid_sum[106],
		mid_sum[105],
		mid_sum[104],
		mid_sum[103],
		mid_sum[102],
		mid_sum[101],
		mid_sum[100],
		mid_sum[99],
		mid_sum[98],
		mid_c[14] }),
	.in1({ mid_sum[119],
		mid_sum[118],
		mid_sum[117],
		mid_sum[116],
		mid_sum[115],
		mid_sum[114],
		mid_sum[113],
		mid_sum[112],
		mid_sum[111],
		mid_sum[110],
		mid_sum[109],
		mid_c[15] }),
	.sel(selected_c[7]),
	.ou1({ sum[63],
		sum[62],
		sum[61],
		sum[60],
		sum[59],
		sum[58],
		sum[57],
		sum[56],
		sum[55],
		sum[54],
		sum[53],
		cout }));
endmodule

